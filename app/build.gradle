apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'


def serverPropertiesFile = rootProject.file("server.properties")
def serverProperties = new Properties()
serverProperties.load(new FileInputStream(serverPropertiesFile))
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.andorid.movie"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    flavorDimensions "environment"
    productFlavors {

        dev {
            dimension "environment"
            buildConfigField "String", "Base_Url", serverProperties['dev']
            buildConfigField "String", "Api_KEY", serverProperties['apikey']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true

        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    implementation 'com.android.support:appcompat-v7:28.0.0'
//    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    def supportDependency = rootProject.ext.supportLibDependencies
    implementation supportDependency.appcompt
    implementation supportDependency.desigin
//    implementation supportDependency.cardView
//    implementation supportDependency.customTabs
//    implementation supportDependency.animatedVector
    implementation supportDependency.constraintLayout
    implementation supportDependency.lifecycle
    implementation supportDependency.lifecycleRuntime
    implementation supportDependency.multidex

    def retrofitDependencies = rootProject.ext.retrofitDependencies
    implementation retrofitDependencies.retrofit
    implementation retrofitDependencies.retrofitGson
    implementation retrofitDependencies.retrofitMock
    implementation retrofitDependencies.retrofitInterceptor
}
